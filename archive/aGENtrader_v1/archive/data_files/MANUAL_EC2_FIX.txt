# Manual EC2 Fix Instructions

If the automated scripts failed to connect to EC2, you can manually apply the fix:

## Option 1: Using the Fix Script

1. SSH into your EC2 instance:
   ```
   ssh -i ec2_ssh_key.pem ec2-user@<EC2_PUBLIC_IP>
   ```

2. Run the fix script (if it's already there):
   ```
   cd /home/ec2-user/aGENtrader
   python3 fix_ec2_autogen_group_chat.py --all
   ```

## Option 2: Manual Fix

If the fix script is not available on the EC2 instance, you can manually edit the files:

1. SSH into your EC2 instance:
   ```
   ssh -i ec2_ssh_key.pem ec2-user@<EC2_PUBLIC_IP>
   ```

2. Open the file that needs fixing (collaborative_trading_framework.py):
   ```
   cd /home/ec2-user/aGENtrader
   nano agents/collaborative_trading_framework.py
   ```

3. Look for this code:
   ```python
   manager = GroupChatManager(
       groupchat=self.group_chat,
       llm_config=self.llm_config,
       is_termination_msg=lambda msg: "TRADING SESSION COMPLETE" in msg.get("content", "")
   )
   ```

4. Update it to:
   ```python
   manager = GroupChatManager(
       groupchat=self.group_chat,
       llm_config=self.llm_config,
       is_termination_msg=lambda msg: "TRADING SESSION COMPLETE" in msg.get("content", ""),
       select_speaker_auto_llm_config=self.llm_config  # Add this line
   )
   ```

5. Save the file (Ctrl+O, Enter, Ctrl+X in nano)

6. Look for other files that might use GroupChatManager:
   ```
   cd /home/ec2-user/aGENtrader
   grep -r "GroupChatManager" --include="*.py" .
   ```

7. Apply the same fix to those files if they initialize a GroupChatManager without the select_speaker_auto_llm_config parameter.

## Testing the Fix

After applying the fix, run a basic test to verify:

```
cd /home/ec2-user/aGENtrader
python3 test_structured_decision_making.py --test_type extractor
```

If the test is successful, you should no longer see the error about "The group chat's internal speaker selection agent does not have an LLM configuration."