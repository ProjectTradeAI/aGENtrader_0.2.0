You are working under the `v0.2.1` branch of the aGENtrader_0.2.0 repository.

Your task is to enhance the `test_agent_individual.py` utility by adding a structured, user-friendly CLI interface.  
The goal is to support flexible manual testing now, and later automation by optimization agents.

---

### ðŸŽ¯ Objectives

âœ… Upgrade `test_agent_individual.py` into a full CLI utility

âœ… Add user-facing options for:
- `--agent` â†’ Agent class to test (e.g., `TechnicalAnalystAgent`)
- `--symbol` â†’ Symbol (e.g., BTC/USDT)
- `--interval` â†’ Timeframe (e.g., 1h, 4h)
- `--data-source` â†’ `mock` or `live`
- `--temperature` â†’ LLM sampling temperature (e.g., 0.0 for deterministic)
- `--repeat` â†’ Number of iterations
- `--explain` â†’ Print full prompt, reasoning, LLM completion
- `--save-trace` â†’ Store structured results to JSONL
- `--quick` â†’ Run a minimal default test to validate health
- `--interactive` â†’ If no flags provided, ask user step-by-step

---

### ðŸ§  Internal Behavior

- Use `argparse` for CLI parsing
- Validate agent selection against available classes
- If `--interactive`, use a `questionary` or `input()`-based loop:
  - Prompt for agent, data source, interval, etc.
- For `--quick`, run a default test:
  ```bash
  test_agent_individual.py --agent TechnicalAnalystAgent --symbol BTC/USDT --interval 1h --mock-data --temperature 0.0 --repeat 1
ðŸ§ª Output & Logging
âœ… Print summary block after each iteration:

css
Copy
Edit
[âœ“] Iteration 1 - BUY @ 50,233.47 - Confidence: 65%
Reason: RSI breakout confirmed, volume aligned
âœ… If --save-trace, store output to:

bash
Copy
Edit
logs/agent_trace_YYYYMMDD_HHMM.jsonl
âœ… Acceptance Criteria
Agent can be run with full CLI config OR via interactive mode

--quick mode provides fast system health check

All test results can be printed or saved for review

Structure supports future integration with optimization agents

ðŸ”® Optional Extension (not needed now but plan-ready)
Design internal functions so future agents can import them:

python
Copy
Edit
from tests.test_agent_individual import run_single_test(config)
This will allow auto-tuning or Monte Carlo testing in the future.

yaml
Copy
Edit
