You are working under the `v0.2.1` branch of the aGENtrader_0.2.0 repository.

Your task is to investigate and resolve a recurring issue with the sentiment agents returning repeated or identical analysis results â€” despite using Grok as the LLM backend.

---

### ðŸŽ¯ Objective

âœ… Ensure both `SentimentAnalystAgent` and `SentimentAggregatorAgent`:

- Use **live, real-time prompts** based on the current symbol and interval  
- Properly invoke the **Grok API** (via `llm_client`) on each execution  
- Do not return placeholder/mock or cached data unless explicitly configured

---

### ðŸ§ª Investigation Targets

Please inspect and fix the following:

#### 1. Prompt Construction
- Check that each sentiment agent builds a **fresh prompt** per execution, including:
  - `symbol`, `interval`, recent `price/volume snapshot`, or `news data` where applicable

- Ensure no hardcoded fallback prompt or static template is returned during analysis

#### 2. Mock Mode
- Review the `SentimentAnalystAgent.analyze()` and `SentimentAggregatorAgent.analyze()` methods  
- Confirm mock mode (`mock=True`) is only active if explicitly enabled by config or CLI

- If mock mode is triggered unintentionally, fix the condition

#### 3. LLM Client Behavior
- Verify that `llm_client.chat()` calls the Grok API endpoint using a fresh `messages` structure
- Ensure the returned message is not cached or reused from previous runs

#### 4. Logging
- Add a debug-level log showing the first 120 chars of each outgoing prompt  
- Add a debug log showing the first 120 chars of the actual LLM response

---

### âœ… Acceptance Criteria

- SentimentAnalystAgent and SentimentAggregatorAgent return **varied, context-aware outputs**
- Grok is verified to be the live source of analysis  
- Repetitive placeholder text no longer appears  
- Mock mode is off by default and clearly logged when enabled  
- Test run shows different outputs between test iterations for the same agent

---

âœ… Bonus (optional): Add `--mock` CLI flag to the test runner to control sentiment mock mode explicitly
